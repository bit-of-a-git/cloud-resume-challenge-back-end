name: Test Infrastructure

on:
  pull_request:
    branches: 
      - main

env:
  aws-dev-account: ${{ secrets.AWS_DEV_ACCOUNT }}
  aws-dev-bucket: ${{ secrets.AWS_DEV_BUCKET }}

jobs:
  build:
    permissions:
      id-token: write    # Job to connect to Identity Token to receive the token
      contents: read     # Read access to the repository
    runs-on:
       - ubuntu-latest
       
    steps:
    # Checkout Repository
    - name : Check out Git Repository
      uses: actions/checkout@v3  
      
    - name: Connecting GitHub Actions To AWS Using OIDC - Roles
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-1
        role-to-assume: arn:aws:iam::${{ env.aws-dev-account }}:role/Github
        role-session-name: github-actions-session
 
   # Terraform Operations
    - name : Terraform Setup
      uses: hashicorp/setup-terraform@v2
      
    - name: Terraform Init
      id: init
      run: terraform init -backend-config "bucket=${{ env.aws-dev-bucket }}"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        terraform plan -refresh=false  -no-color -out out.plan
      continue-on-error: false
      
    - name: Terraform Plan Status
      if: ${{ steps.plan.outcome == 'failure' }}
      run: exit 1
      
    - name: Terraform Apply
      id: apply
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        terraform apply --auto-approve
      continue-on-error: true
      
    - name: Terraform Apply Status
      if: ${{ steps.apply.outcome == 'failure' }}
      run: exit 1

    - name: Get API endpoint
      id: api-output
      run: |
        echo "::set-output name=apiEndpoint::$(terraform output -raw apigateway_stage_URL)"

    - name: Replace apiEndpoint in cypress.config.js
      run: |
        cypressConfig=$(find <path-to-cypress-directory> -name "cypress.config.js")

        apiEndpoint=$(terraform output -raw apigateway_stage_URL)
      
        sed -i "s/process\.env\.apiEndpoint/$apiEndpoint/g" "$cypressConfig"

    - name: Cypress Tests
      uses: actions/checkout@v1
      env:
        apiEndpoint: ${{ steps.api-output.outputs.api-endpoint  }}

    - name: Cypress run
      uses: cypress-io/github-action@v4.1.0

    #   # Step 2: Set up Node.js
    # - name: Set up Node.js
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: 14

    #   # Step 3: Install dependencies
    # - name: Install dependencies
    #   run: npm ci

  # job-cypress:  
  #   name: Cypress Tests
  #   runs-on: ubuntu-latest
  #   env:
  #     API_ENDPOINT: ${{ needs.build.outputs.apiEndpoint  }}
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v4.1.0